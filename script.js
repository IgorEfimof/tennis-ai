document.getElementById("analyze-btn").addEventListener("click", analyzeGame);
document.getElementById("clear-btn").addEventListener("click", clearInputs);
document.getElementById("victory-btn").addEventListener("click", handleVictory);
document.getElementById("loss-btn").addEventListener("click", handleLoss);

const fields = [
    "game-5-player1", "game-5-player2",
    "game-6-player1", "game-6-player2",
    "game-7-player1", "game-7-player2",
    "game-8-player1", "game-8-player2",
    "game-9-player1", "game-9-player2",
    "game-10-player1", "game-10-player2"
];

fields.forEach((fieldId, index) => {
    const nextFieldId = fields[index + 1];
    addInputFormatting(fieldId, nextFieldId);
});

let prediction = {};

function analyzeGame() {
    const games = [];
    for (let i = 5; i <= 10; i++) {
        const player1 = parseFloat(document.getElementById(`game-${i}-player1`).value);
        const player2 = parseFloat(document.getElementById(`game-${i}-player2`).value);

        if (isNaN(player1) || isNaN(player2)) {
            document.getElementById("result").innerHTML = "<p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è –∏–≥—Ä.</p>";
            return;
        }

        games.push({
            game: i,
            player1,
            player2
        });
    }

    const result = analyzeCoefficientsAI(games);
    prediction = predictWinner(games);
    
    let history = JSON.parse(localStorage.getItem("predictionHistory") || "[]");
    let accuracy = 0;
    if (history.length > 0) {
        const correctPredictions = history.filter(item => item.result === "–ø–æ–±–µ–¥–∏–ª" && item.prediction.winner === item.resultPlayer).length;
        accuracy = (correctPredictions / history.length) * 100;
    }

    let adjustedConfidence = prediction.confidence;
    if (accuracy > 80) {
        adjustedConfidence *= 1.1;
    } else if (accuracy < 60) {
        adjustedConfidence *= 0.9;
    }

    let resultHTML = `<p>${result}</p>`;
    document.getElementById("result").innerHTML = resultHTML;

    if (prediction.winner) {
        document.getElementById("ai-prediction").innerHTML =
            `ü§ñ –ü—Ä–æ–≥–Ω–æ–∑ AI: –ü–æ–±–µ–¥–∏—Ç –ò–≥—Ä–æ–∫ ${prediction.winner} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(adjustedConfidence).toFixed(1)}%)<br>` +
            (accuracy > 0 ? `üìä –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: ${accuracy.toFixed(1)}%` : '');
    } else {
        document.getElementById("ai-prediction").innerHTML =
            `ü§ñ –ü—Ä–æ–≥–Ω–æ–∑ AI: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞.`;
    }

    localStorage.setItem("lastAnalysis", result);
}

function handleVictory() {
    const result = { 
        game: prediction.game, 
        prediction: prediction, 
        result: "–ø–æ–±–µ–¥–∏–ª",
        resultPlayer: prediction.winner
    };
    saveGameResult(result);
}

function handleLoss() {
    const result = { 
        game: prediction.game, 
        prediction: prediction, 
        result: "–ø—Ä–æ–∏–≥—Ä–∞–ª",
        resultPlayer: prediction.winner === 1 ? 2 : 1 
    };
    saveGameResult(result);
}

function saveGameResult(result) {
    let history = JSON.parse(localStorage.getItem("predictionHistory") || "[]");
    history.push(result);
    localStorage.setItem("predictionHistory", JSON.stringify(history));
}

function clearInputs() {
    document.querySelectorAll("input").forEach(input => input.value = "");
    document.getElementById("result").innerHTML = "<p>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±—É–¥—É—Ç –∑–¥–µ—Å—å.</p>";
    document.getElementById("ai-prediction").innerHTML = "";
}

function addInputFormatting(inputId, nextInputId) {
    const input = document.getElementById(inputId);
    input.addEventListener("input", () => {
        let value = input.value.replace(/[^0-9]/g, "");
        if (value.length === 0) {
            input.value = "";
        } else if (value.length === 1) {
            input.value = value + ".";
        } else if (value.length > 1) {
            input.value = value.slice(0, 1) + "." + value.slice(1, 3);
        }

        if (input.value.length === 4 && nextInputId) {
            const nextInput = document.getElementById(nextInputId);
            if (nextInput) {
                nextInput.focus();
            }
        }
    });
}

// –§—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞
function analyzeCoefficientsAI(games) {
    // –õ–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤...
}

function predictWinner(games) {
    // –õ–æ–≥–∏–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è...
}
